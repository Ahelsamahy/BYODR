name: Docker Compose Test

on:
  push:
    branches:
      - main
      - '*'

jobs:
  Test_Nano_Docker:
    runs-on: ubuntu-latest

    steps:
      - name: Check out repository
        uses: actions/checkout@v2
      # Exculding inference because it needs .oonx and .ini files, which are private
      # Add docker-compose.override.yml to overcome CPU higher than 1 in pilot service
      - name: Docker compose build (root without inference)
        run: docker-compose -f docker-compose.yml -f docker-compose.override.yml build $(docker-compose -f docker-compose.yml -f docker-compose.override.yml config --services | grep -v inference)

      # Make sure it would run good for at least 30 seconds
      - name: Docker compose up (root without inference)
        run: |
          docker-compose -f docker-compose.yml -f docker-compose.override.yml up -d $(docker-compose -f docker-compose.yml -f docker-compose.override.yml config --services | grep -v inference)
          sleep 30
          docker-compose -f docker-compose.yml -f docker-compose.override.yml down
    

  Test_Pi_Docker:
    runs-on: ubuntu-latest

    steps:
      - name: Check out repository
        uses: actions/checkout@v2
        # Build the Docker services: This validates the build process and catches issues related to the Dockerfile and dependencies.
      - name: Docker compose build (raspi)
        run: docker-compose -f raspi/docker-compose.yml build

        # Run (up): Ensures that the application behaves correctly in a containerized environment.
      - name: Docker compose up (raspi)
        run: |
          docker-compose -f raspi/docker-compose.yml up -d
          sleep 30
          docker-compose -f raspi/docker-compose.yml down
