version: '2'
services:
  cam1:
    build:
      context: .
      dockerfile: vehicles/rover/Dockerfile.gst
    image: centipede2donald/byodr-ce:gstcam
    volumes:
      - ./vehicles/rover:/app
    command: ./stream1.sh
    stop_signal: SIGKILL
  nodews:
    build:
      context: .
      dockerfile: teleop/nodews/Dockerfile
    image: centipede2donald/byodr-ce:nodews
    depends_on:
      - "cam1"
    ports:
      - "9101:9101"
    environment:
      FEED_IP: 'byodr_cam1'
    #volumes:  not compatible with npm local install  - ./teleop/xyz:/app
    stop_signal: SIGKILL
  teleop:
    volumes:
      - ./common:/common
      - ./teleop:/app
  pilot:
    volumes:
      - ./common:/common
      - ./pilot:/app
  recorder:
    volumes:
      - ./common:/common
      - ./recorder:/app
  ros:
    image: centipede2donald/byodr-ce:rosserial
    command: roscore
    ports:
      - "11311:11311"
  rosserial:
    build:
      context: .
      dockerfile: vehicles/rover/Dockerfile.ros
    image: centipede2donald/byodr-ce:rosserial
    command: python rosserial.py --port=/dev/arduino
    environment:
      ROS_MASTER_URI: 'http://byodr_ros:11311'
    volumes:
      - ./vehicles/rover:/app
    devices:
      - /dev/arduino
  vehicle:
    build:
      context: .
      dockerfile: vehicles/rover/Dockerfile
    image: centipede2donald/byodr-ce:rover
    environment:
      ROS_MASTER_URI: 'http://byodr_ros:11311'
    volumes:
      - ./common:/common
      - ./vehicles/rover:/app
  inference:
    build:
      context: ./
      dockerfile: inference/Dockerfile.jp
    image: centipede2donald/byodr-ce:inference
    volumes:
      - './inference:/app'
      - '/usr/local/cuda:/usr/local/cuda'
      - '/usr/lib/aarch64-linux-gnu:/usr-extra'
    devices:
      - '/dev/nvhost-ctrl'
      - '/dev/nvhost-ctrl-gpu'
      - '/dev/nvhost-prof-gpu'
      - '/dev/nvmap'
      - '/dev/nvhost-gpu'
      - '/dev/nvhost-as-gpu'


