version: '2'
services:
  rosserial:
    user: '1000'
    build:
      context: ./
      dockerfile: vehicles/rover/Dockerfile.rosserial
    image: byodr/vehicle_rover_ros
    container_name: byodr_rover_ros
    volumes:
      - ./vehicles/rover:/app
    devices:
      - ${DC_ROS_SERIAL_DEVICE}
    ports:
      - "11311:11311"
    command: roslaunch rosserial.launch
  inference:
    volumes_from:
      - teleop:rw
    volumes:
      - './inference:/app'
      - '/mnt/data1:/data1'
      - '/usr/lib/aarch64-linux-gnu/tegra:/usr/lib/aarch64-linux-gnu/tegra'
      - '/usr/local/cuda-9.0:/usr/local/cuda'
    devices:
      - '/dev/nvhost-ctrl'
      - '/dev/nvhost-ctrl-gpu'
      - '/dev/nvhost-prof-gpu'
      - '/dev/nvmap'
      - '/dev/nvhost-gpu'
      - '/dev/nvhost-as-gpu'
#  jsmpeg:
#    user: '1000'
#    build:
#      context: ./
#      dockerfile: vehicles/rover/Dockerfile.jsmpeg
#    image: byodr/jsmpeg_server
#    container_name: byodr_jsmpeg
#    ports:
#      - "9501-9502:9501-9502"
#    command: node websocket-relay.js yeppr 9501 9502
#    stop_signal: SIGKILL
#  ffmpeg:
#    user: '1000'
#    image: itlabstar/ffmpeg
#    container_name: byodr_ffmpeg
#    depends_on:
#      - jsmpeg
#    restart: unless-stopped
#    command: ffmpeg -i rtsp://user1:HelloUser1@192.168.50.64:554/Streaming/Channels/102 -preset ultrafast -f mpegts -codec:v mpeg1video -s 480x320 -b:v 1000k -bf 0 http://byodr_jsmpeg:9501/yeppr -async 1 -vsync 1
  vehicle:
    user: '1000'
    build:
      context: ./
      dockerfile: vehicles/rover/Dockerfile.rover
    image: byodr/vehicle_rover
    container_name: byodr_rover
    volumes_from:
      - teleop:rw
    volumes:
      - ./common:/common
      - ./vehicles/rover:/app
    environment:
      ROS_MASTER_URI: 'http://byodr_rover_ros:11311'
    command: python app.py --config=/app/${DC_JSON_ROVER} --clock=${DC_VEHICLE_HZ} --patience=${DC_TELEOP_PATIENCE}


